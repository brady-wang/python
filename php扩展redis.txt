php扩展redis
 
Redis安装整理(window平台) +php扩展redis

分类： Web开发2013-03-23 18:51 8258人阅读 评论(3) 收藏 举报

                          主要步骤都是参考百度前几条的教程，但是中间出现了几个小小的问题，特地来补充一下：
 
 
window平台Redis安装 redis windows安装文件下载地址:http://code.google.com/p/servicestack/wiki/RedisWindowsDownload#Download_32bit_Cygwin_builds_for_Windows我选择的redis为最新版的安装文件，见下图：    Redis安装文件解压后，有以下几个文件。见下图 
redis-server.exe：服务程序 redis-check-dump.exe：本地数据库检查 redis-check-aof.exe：更新日志检查 redis-benchmark.exe：性能测试，用以模拟同时由N个客户端发送M个 SETs/GETs 查询 (类似于 Apache 的ab 工具). 在解压好redis的安装文件到E:\根目录后，还需要在redis根目录增加一个redis的配置文件redis.conf，文件具体内容附件中有，不过这里我仍然把配置文件的内容贴上来： 
 
 
配置文件


[html] view plaincopy
 



# Redis configuration file example  
  
# By default Redis does not run as a daemon. Use 'yes' if you need it.  
# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.  
daemonize no  
  
# When run as a daemon, Redis write a pid file in /var/run/redis.pid by default.  
# You can specify a custom pid file location here.  
pidfile /var/run/redis.pid  
  
# Accept connections on the specified port, default is 6379  
port 6379  
  
# If you want you can bind a single interface, if the bind option is not  
# specified all the interfaces will listen for connections.  
#  
# bind 127.0.0.1  
  
# Close the connection after a client is idle for N seconds (0 to disable)  
timeout 300  
  
# Set server verbosity to 'debug'  
# it can be one of:  
# debug (a lot of information, useful for development/testing)  
# notice (moderately verbose, what you want in production probably)  
# warning (only very important / critical messages are logged)  
loglevel debug  
  
# Specify the log file name. Also 'stdout' can be used to force  
# the demon to log on the standard output. Note that if you use standard  
# output for logging but daemonize, logs will be sent to /dev/null  
logfile stdout  
  
# Set the number of databases. The default database is DB 0, you can select  
# a different one on a per-connection basis using SELECT <dbid> where  
# dbid is a number between 0 and 'databases'-1  
databases 16  
  
################################ SNAPSHOTTING  #################################  
#  
# Save the DB on disk:  
#  
#   save <seconds> <changes>  
#  
#   Will save the DB if both the given number of seconds and the given  
#   number of write operations against the DB occurred.  
#  
#   In the example below the behaviour will be to save:  
#   after 900 sec (15 min) if at least 1 key changed  
#   after 300 sec (5 min) if at least 10 keys changed  
#   after 60 sec if at least 10000 keys changed  
save 900 1  
save 300 10  
save 60 10000  
  
# Compress string objects using LZF when dump .rdb databases?  
# For default that's set to 'yes' as it's almost always a win.  
# If you want to save some CPU in the saving child set it to 'no' but  
# the dataset will likely be bigger if you have compressible values or keys.  
rdbcompression yes  
  
# The filename where to dump the DB  
dbfilename dump.rdb  
  
# For default save/load DB in/from the working directory  
# Note that you must specify a directory not a file name.  
dir ./  
  
################################# REPLICATION #################################  
  
# Master-Slave replication. Use slaveof to make a Redis instance a copy of  
# another Redis server. Note that the configuration is local to the slave  
# so for example it is possible to configure the slave to save the DB with a  
# different interval, or to listen to another port, and so on.  
#  
# slaveof <masterip> <masterport>  
  
# If the master is password protected (using the "requirepass" configuration  
# directive below) it is possible to tell the slave to authenticate before  
# starting the replication synchronization process, otherwise the master will  
# refuse the slave request.  
#  
# masterauth <master-password>  
  
################################## SECURITY ###################################  
  
# Require clients to issue AUTH <PASSWORD> before processing any other  
# commands.  This might be useful in environments in which you do not trust  
# others with access to the host running redis-server.  
#  
# This should stay commented out for backward compatibility and because most  
# people do not need auth (e.g. they run their own servers).  
#  
# requirepass foobared  
  
################################### LIMITS ####################################  
  
# Set the max number of connected clients at the same time. By default there  
# is no limit, and it's up to the number of file descriptors the Redis process  
# is able to open. The special value '0' means no limts.  
# Once the limit is reached Redis will close all the new connections sending  
# an error 'max number of clients reached'.  
#  
# maxclients 128  
  
# Don't use more memory than the specified amount of bytes.  
# maxmemory <bytes>  
  
appendonly no  
appendfsync always  
glueoutputbuf yes  

将附件中的redis_conf.rar解压下来放到redis的根目录中即可。到此，redis的安装已经完毕。下面开始使用redis数据库。 启动redis： 输入命令：redis-server.exe redis.conf 启动后如下图所示：  启动cmd窗口要一直开着，关闭后则Redis服务关闭。 这时服务开启着，另外开一个窗口进行，设置客户端： 输入命令：redis-cli.exe -h 202.117.16.133 -p 6379 输入后如下图所示：  上面的IP写自己的哦：
 
php扩展Redis功能
 
 
 1 首先，查看所用php编译版本V6/V9 在phpinfo()中查看
 

 
2 下载扩展 地址：https://github.com/nicolasff/phpredis/downloads（注意所支持的php版本）
 
3 将下载的php_redis.dll放在php扩展目录中（ext），并修改配置文件php.ini
 
添加 扩展的时候一定要

extension=php_igbinary.dll
extension=php_redis.dll

这个顺序
 
否则重启Apache的时候会出现，PHP startup 错误
 
4 重新启动服务，查看phpinfo(),下面表示成功；
 


 
5 用PHP测试
 


Php代码



 


[php] view plaincopy
 



$redis = new Redis();  
$redis->connect("192.168.138.2","6379");  //php客户端设置的ip及端口  
//存储一个 值  
$redis->set("say","Hello World");  
echo $redis->get("say");     //应输出Hello World  
  
//存储多个值  
$array = array('first_key'=>'first_val',  
          'second_key'=>'second_val',  
          'third_key'=>'third_val');  
$array_get = array('first_key','second_key','third_key');  
$redis->mset($array);  
var_dump($redis->mget($array_get));  



