数据库快速入门例子代码
 


数据库快速入门例子代码
下面的内容将简单说明怎样使用数据库。更详细的信息请阅读各个函数的单独介绍页面。
初始化数据库类
下面的代码将依据你的数据库配置载入并初始化数据库类:
$this->load->database();
一旦被载入，你可以在任何地方像这样使用它：
注意: 如果你的所有页面均要求初始化数据库类，你可以让它自动加载。详见 数据库连接。
多结果标准查询（对象形式）
$query = $this->db->query('SELECT name, title, email FROM my_table');foreach ($query->result() as 
$row){    echo $row->title;    echo $row->name;    echo 
$row->email;}echo 'Total Results: ' . $query->num_rows(); 

上面的result()函数返回一个对象的数组。例如：$row->title
多结果标准查询（数组形式）
$query = $this->db->query('SELECT name, title, 
email FROM my_table');foreach ($query->result_array() as 
$row){    echo $row['title'];    echo $row['name'];    echo 
$row['email'];}
上面的result_array()函数返回一个带下标的数组。例如：$row['title']
测试查询结果
如果你的查询可能不返回结果，我们建议你先使用 num_rows()函数来测试:
$query = 
$this->db->query("YOUR QUERY");if ($query->num_rows() > 
0){   foreach ($query->result() as $row)   {      echo 
$row->title;      echo $row->name;      echo 
$row->body;   }} 
单结果标准查询（对象形式）
$query = $this->db->query('SELECT name FROM 
my_table LIMIT 1');$row = $query->row();echo 
$row->name;
上面的row()函数返回一个 对象。例如：$row->name
单结果标准查询（数组形式）
$query = $this->db->query('SELECT name FROM 
my_table LIMIT 1');$row = $query->row_array();echo 
$row['name'];
上面的row_array()函数返回一个 数组。例如：$row['name']
标准插入(insert)
$sql = "INSERT INTO mytable (title, name) 
        VALUES (".$this->db->escape($title).", 
".$this->db->escape($name).")";$this->db->query($sql);echo 
$this->db->affected_rows(); 
快捷查询
快捷查询类能为我们提供快速取得数据的途径:
$query 
= $this->db->get('table_name');foreach ($query->result() as 
$row){    echo $row->title;}
上面的get()函数返回数据表中所有的结果。 快捷查询类 
提供所有数据库操作的快捷函数。
快捷插入(insert)
$data = array(               'title' => 
$title,               'name' => $name,               'date' => 
$date            );$this->db->insert('mytable', $data); 
// Produces: INSERT INTO mytable (title, name, date) VALUES ('{$title}', 
'{$name}', '{$date}')
