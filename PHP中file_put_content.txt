PHP中file_put_contents追加和换行的实现方法
在PHP的一些应用中需要写日志或者记录一些信息，这样的话。可以使用fopen(),fwrite()以及 fclose()这些进行操作。也可以简单的使用file_get_contents()和file_put_contents().
file_put_contents()写文件。默认的是重新写文件，也就是会 替换原先的内容。追加的话使用参数FILE_APPEND.
以追加形式写入内容 当设置 flags 参数值为 FILE_APPEND 时，表示在已有文件内容后面追加内容的方式写入新数据：
FILE_APPEND：在文件末尾以追加的方式写入数据


?




1
2



int file_put_contents ( string filename, string data [, int flags [, resource context]] )
file_put_contents("log.txt", "Hello world everyone.", FILE_APPEND);







//参数说明：
filename    //要写入数据的文件名
data    //要写入的数据。类型可以是 string，array（但不能为多维数组），或者是 stream 资源
flags   //可选，规定如何打开/写入文件。可能的值：
FILE_USE_INCLUDE_PATH：//检查 filename 副本的内置路径
FILE_APPEND：//在文件末尾以追加的方式写入数据
LOCK_EX：//对文件上锁
context //可选，Context是一组选项，可以通过它修改文本属性
很多时候记录日志需要换行。不建议使用\r\n，因为：
在windows中\r\n是换行
在Mac中\r是换行
在Liunx中\n是换行
但是PHP提供了一个常量来匹配不同的操作系统，即：
PHP_EOL


?




1



file_put_contents("log.txt", "Hello world everyone.".PHP_EOL, FILE_APPEND);







